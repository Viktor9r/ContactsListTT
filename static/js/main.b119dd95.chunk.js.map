{"version":3,"sources":["components/ContactInfo/ContactInfo.tsx","components/ContactsList/ContactsList.tsx","App.tsx","index.tsx"],"names":["ContactInfo","contact","className","id","phone","info","group","ContactsList","contactsFromServer","useState","selectedContactId","setSelectedContactId","contacts","setContacts","newName","setNewName","newPhone","setNewPhone","newInfo","setNewInfo","newGroup","setNewGroup","showDeleteButton","setShowDeleteButton","openDeleteButton","hideDeleteButton","contactInfo","filter","useEffect","onSubmit","event","preventDefault","newContact","listWithAddedContact","addContact","length","name","onChange","target","value","type","placeholder","required","map","onClick","contactId","filteredContacts","deleteContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b119dd95.chunk.js","sourcesContent":["import React from 'react';\nimport './ContactInfo.scss';\n\ntype Props = {\n  contact: ContactNew,\n};\n\nexport const ContactInfo: React.FC<Props> = ({ contact }) => {\n  return (\n    <div className=\"contact-info\">\n      {contact.id}\n      <div className=\"contact-info__phone contact-info__info\">\n        <span className=\"contact-info--title\">Number: </span>\n        {contact.phone}\n      </div>\n      <div className=\"contact-info__about contact-info__info\">\n        <span className=\"contact-info--title\">Information: </span>\n        {contact.info}\n      </div>\n      <div className=\"contact-info__group contact-info__info\">\n        <span className=\"contact-info--title\">Group: </span>\n        {contact.group}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './ContactsList.scss';\nimport { ContactInfo } from '../ContactInfo/ContactInfo';\n\ntype Props = {\n  contactsFromServer: ContactNew[],\n};\n\nexport const ContactsList: React.FC<Props> = ({ contactsFromServer }) => {\n  const [selectedContactId, setSelectedContactId] = useState(0);\n  const [contacts, setContacts] = useState<ContactNew[]>([]);\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [newInfo, setNewInfo] = useState('');\n  const [newGroup, setNewGroup] = useState('');\n  const [showDeleteButton, setShowDeleteButton] = useState<boolean>(false);\n\n  const openDeleteButton = () => {\n    setShowDeleteButton(true);\n  };\n\n  const hideDeleteButton = () => {\n    setShowDeleteButton(false);\n  };\n\n  const contactInfo = contacts.filter(contact => contact.id === selectedContactId);\n\n  const addContact = (newContact: ContactNew) => {\n    const listWithAddedContact = [...contacts, newContact];\n\n    setContacts(listWithAddedContact);\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleInfoChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewInfo(event.target.value);\n  };\n\n  const handleGroupChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setNewGroup(event.target.value);\n  };\n\n  const getNewContact = () => {\n    const newContact: ContactNew = {\n      id: contacts.length + 1,\n      name: newName,\n      phone: newPhone,\n      info: newInfo,\n      group: newGroup,\n    };\n\n    return newContact;\n  };\n\n  const clearState = () => {\n    setNewName('');\n    setNewPhone('');\n    setNewInfo('');\n    setNewGroup('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setSelectedContactId(0);\n\n    const newContact = getNewContact();\n\n    addContact(newContact);\n    clearState();\n  };\n\n  const loadContacts = () => {\n    const contactsList = contactsFromServer;\n\n    setContacts(contactsList);\n  };\n\n  useEffect(() => {\n    loadContacts();\n  }, [setContacts]);\n\n  const deleteContact = (contactId: number) => {\n    const filteredContacts = [...contacts].filter(contact => contact.id !== contactId);\n\n    setContacts(filteredContacts);\n    setShowDeleteButton(false);\n  };\n\n  return (\n    <div className=\"contacts\">\n      <form className=\"add-form\" onSubmit={handleSubmit}>\n        <div className=\"add-form__title-change\">\n          <input\n            onChange={handleNameChange}\n            value={newName}\n            name=\"newTitle\"\n            type=\"text\"\n            placeholder=\"Name\"\n            className=\"add-form__input\"\n            required\n          />\n        </div>\n\n        <div className=\"add-form__phone-change\">\n          <input\n            onChange={handlePhoneChange}\n            value={newPhone}\n            name=\"newDescription\"\n            type=\"telephone\"\n            placeholder=\"Phone number\"\n            className=\"add-form__input\"\n            required\n          />\n        </div>\n\n        <div className=\"add-form__info-change\">\n          <input\n            onChange={handleInfoChange}\n            value={newInfo}\n            name=\"newImgUrl\"\n            type=\"text\"\n            placeholder=\"Information\"\n            className=\"add-form__input\"\n            required\n          />\n        </div>\n\n        <div className=\"add-form__group-change\">\n          Chose a group:\n          {' '}\n          <select value={newGroup} onChange={handleGroupChange} required>\n            <option value=\"\">Chose one:</option>\n            <option value=\"friends\">friends</option>\n            <option value=\"family\">family</option>\n            <option value=\"work\">work</option>\n            <option value=\"others\">others</option>\n          </select>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"add-form__add-button\"\n        >\n          Add\n        </button>\n      </form>\n      <ul className=\"contacts__list\">\n        <div className=\"contacts__list-items\">\n          {contacts.map(contact => (\n            <li key={contact.id} className=\"contacts__item\">\n              <div className=\"contacts__title\">\n                {contact.name}\n              </div>\n              <button\n                type=\"button\"\n                className=\"contacts__button\"\n                onClick={() => setSelectedContactId(contact.id)}\n              >\n                Show contact info\n              </button>\n              <button\n                type=\"button\"\n                className=\"contacts__button\"\n                onClick={() => setSelectedContactId(0)}\n              >\n                Hide contact info\n              </button>\n            </li>\n          ))}\n        </div>\n        <div className=\"contacts__list-info-block\">\n          <div className=\"contacts__list-info-block-title\">Conctact Info:</div>\n          {[...contactInfo].map(contact => (\n            <>\n              <div key={contact.id} className=\"contacts__list-info\">\n                <ContactInfo contact={contact} />\n              </div>\n              <button\n                type=\"button\"\n                className=\"contacts__button\"\n                onClick={openDeleteButton}\n              >\n                Delete contact\n              </button>\n              {showDeleteButton\n                ? (\n                  <>\n                    <div className=\"contacts__delete\">Are you sure?</div>\n                    <button\n                      type=\"button\"\n                      className=\"contacts__button\"\n                      onClick={() => deleteContact(contact.id)}\n                    >\n                      Yes, I am sure\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"contacts__button\"\n                      onClick={hideDeleteButton}\n                    >\n                      Cancel\n                    </button>\n                  </>\n                )\n                : ''}\n            </>\n          ))}\n        </div>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport contactsFromServer from './api/contacts.json';\nimport { ContactsList } from './components/ContactsList/ContactsList';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"body\">\n      <div className=\"title\">Contacts List</div>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <ContactsList contactsFromServer={[...contactsFromServer]} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}